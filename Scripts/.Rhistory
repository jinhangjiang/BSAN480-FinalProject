setwd("C:/Users/jinha/OneDrive - The University of Kansas/2020SPRING/BSAN480/MiniPro#3")
movie<- read.csv("movie.csv")
movie_new<-movie
#### exclude unnecessary variables & transform extreme values
# extreme values
movie_new$BUDGET<-log(movie$BUDGET)
movie_new$BUDGET[movie_new$BUDGET=="-Inf"]<-0
movie_new$REVENUElog<-log(movie$REVENUE)
movie_new$REVENUElog[movie_new$REVENUElog=="-Inf"]<-0
# Useless values
movie_new$MOVIEID<-NULL
movie_new$IMDBID<-NULL
movie_new$TITLETYPE<-NULL
# Factor Values
movie_new$DIRECTOR_GENDER<-as.factor(movie_new$DIRECTOR_GENDER)
movie_new$ACTOR1_GENDER<-as.factor(movie_new$ACTOR1_GENDER)
movie_new$ACTOR2_GENDER<-as.factor(movie_new$ACTOR2_GENDER)
fit<- lm(REVENUElog~ML_RATING+ACTOR1_GENDER+ACTOR2_GENDER+BUDGET+POPULARITY,
data = movie_new)
summary(fit)
genre<-movie$GENRES
genre<-as.data.frame(genre)
names(genre)
head(genre)
library(tm)
mycorpus<-Corpus(genre$genre)
mycorpus<-Corpus(VectorSource(genre$genre))
tmd<-DocumentTermMatrix(mycorpus)
tmd
inspect(tmd)
genre$genre<-gsub("|"," ", genre$genre, fixed = TRUE)
head(genre)
genre<-as.data.frame(genre)
head(genre)
mycorpus<-Corpus(VectorSource(genre$genre))
tmd<-DocumentTermMatrix(mycorpus)
inspect(tmd)
tmd$dimnames
genre$genre<-gsub("(no genres listed)","",genre$genre, fixed = TRUE)
head(genre)
mycorpus<-Corpus(VectorSource(genre$genre))
tmd<-DocumentTermMatrix(mycorpus)
tmd$dimnames
inspect(tmd)
tmd$ncol
tmd$nrow
tmd$i
tmd$j
tmd
as.matrix(tmd)
tmd
tmd<-as.matrix(tmd)
tmd
tmd<-as.data.frame(tmd)
tmd
rbind(movie_new,tmd)
colbind(movie_new,tmd)
cbind(movie_new,tmd)
movie_new<-cbind(movie_new,tmd)
movie_new
head(movie_new)
View(movie_new)
View(tmd)
sum(tmd$drama)
genres_summary<-NULL
genres_summary<as.data.frame(genres_summary)
genres_summary
rownames(genres_summary)<-colnames(tmd)
genres_summary<-matrix(nrow = 19, ncol = 1)
genres_summary<as.data.frame(genres_summary)
rownames(genres_summary)<-colnames(tmd)
genres_summary
genres_summary[,1]<- c('SUM')
genres_summary
genres_summary[,1]<- 0
colnames(genres_summary)<-c('SUM','RANK')
colnames(genres_summary)<-c('SUM')
genres_summary$RANK<-genres_summary$SUM
genres_summary
genres_summary$RANK<-0
genres_summary
genres_summary<-matrix(nrow = 19, ncol = 1)
genres_summary<as.data.frame(genres_summary)
rownames(genres_summary)<-colnames(tmd)
genres_summary[,1]<- 0
colnames(genres_summary)<-c('SUM')
genres_summary<-matrix(nrow = 19, ncol = 2)
genres_summary<as.data.frame(genres_summary)
rownames(genres_summary)<-colnames(tmd)
genres_summary[,1]<- 0
colnames(genres_summary)<-c('SUM','RANK')
genres_summary
genres_summary<-matrix(nrow = 19, ncol = 2)
genres_summary<as.data.frame(genres_summary)
rownames(genres_summary)<-colnames(tmd)
colnames(genres_summary)<-c('SUM','RANK')
genres_summary
for (i in 1:ncol(tmd)) {
genres_summary[i,1]<-sum(tmd[,i])
}
genres_summary
genres_summary[order.SUM]<-1:nrow(genres_summary)
genres_summary[order(SUM)]<-1:nrow(genres_summary)
genres_summary<as.data.frame(genres_summary)
for (i in 1:ncol(tmd)) {
genres_summary[i,1]<-sum(tmd[,i])
}
genres_summary
genres_summary<-as.data.frame(genres_summary)
genres_summary
genres_summary[order(genres_summary$SUM)]<-1:nrow(genres_summary)
genres_summary
genres_summary<-matrix(nrow = 19, ncol = 2)
rownames(genres_summary)<-colnames(tmd)
colnames(genres_summary)<-c('SUM','RANK')
genres_summary<-as.data.frame(genres_summary)
for (i in 1:ncol(tmd)) {
genres_summary[i,1]<-sum(tmd[,i])
}
genres_summary$RANK[order(genres_summary$SUM)]<-1:nrow(genres_summary)
genres_summary
genres_summary$RANK[order(genres_summary$SUM, decreasing = TRUE)]<-1:nrow(genres_summary)
genres_summary
View(genres_summary)
save(genres_summary, file = "genres_summary.csv")
View(movie_new)
movie_new$ORIGINAL_LANGUAGE<-NULL
movie_new$GENRES
movie_new$GENRES<-NULL
table(movie_new$PRODUCTION_COMPANIES)
movie_new$RUNTIMEMINUTES<-NULL
View(movie_new)
col<-colnames(tmd)
col
movie_new[col]<-lapply(movie_new[col], as.factor)
sapply(movie_new,class)
fit<- lm(REVENUElog~-REVENUE -DIRECTOR_NAME,
data = movie_new)
fit<- lm(REVENUElog~-REVENUE -DIRECTOR_NAME - ACTOR1_NAME -ACTOR2_NAME - TITLE,
data = movie_new)
summary(fit)
fit<- lm(REVENUElog~ -REVENUE -DIRECTOR_NAME - ACTOR1_NAME -ACTOR2_NAME - TITLE,
data = movie_new)
summary(fit)
fit<- lm(REVENUElog~.,
data = movie_new)
summary(fit)
tmd
fit<- lm(REVENUElog~ crime,
data = movie_new)
summary(fit)
fit<- lm(REVENUElog~ drama+romance+thriller+comedy+'sci-fi',
data = movie_new)
summary(fit)
fit<- lm(REVENUElog~ drama+romance+thriller+comedy+sci-fi,
data = movie_new)
fit<- lm(REVENUElog~ drama+romance+thriller+comedy+"sci-fi",
data = movie_new)
fit<- lm(REVENUElog~ drama+romance+thriller+comedy+movie_new$`sci-fi`,
data = movie_new)
summary(fit)
fit<- lm(ML_RATING~ drama+romance+thriller+comedy+movie_new$`sci-fi`,
data = movie_new)
summary(fit)
fit<- lm(ML_RATING~ drama+romance+thriller+comedy+movie_new$`sci-fi`+adventure,
data = movie_new)
summary(fit)
hist(movie_new$NUMVOTES)
hist(movie_new$STARTYEAR)
fit<- lm(ML_RATING~ drama+romance+thriller+comedy+`sci-fi`+adventure,
data = movie_new)
summary(fit)
fit<- lm(ML_RATING~ drama+romance+thriller+comedy+`sci-fi`+`adventure,
data = movie_new)
summary(fit)
fit<- lm(ML_RATING~ drama+romance+thriller+comedy+`sci-fi`+`adventure`,
data = movie_new)
fit<- lm(ML_RATING~ drama+romance+thriller+comedy+`sci-fi`+`adventure`,
data = movie_new)
summary(fit)
mean(movie_new$ML_RATING-movie_new$AVERAGERATING)
mean(movie_new$ML_RATING-(movie_new$AVERAGERATING/2))
plot(movie_new$REVENUE~movie_new$ML_RATING)
plot(movie_new$REVENUElog~movie_new$ML_RATING)
plot(movie_new$REVENUElog~movie_new$AVERAGERATING)
genres_summary
movie$GENRES[movie$GENRES=="(no genres listed)"]
movie$GENRES[which(movie$GENRES=="(no genres listed)")]
which(movie$GENRES=="(no genres listed)")
movie_new$NO_GENRE[which(movie$GENRES=="(no genres listed)")]<-1
no_genre<-which(movie$GENRES=="(no genres listed)")
movie_new$NO_GENRE[no_genre]<-1
movie_new$NO_GENRE<-rep(0,nrow(movie_new))
movie_new$NO_GENRE[which(movie$GENRES=="(no genres listed)")]
movie_new$NO_GENRE[which(movie$GENRES=="(no genres listed)")]<-1
#### exclude unnecessary variables & transform extreme values
# extreme values
movie_new$BUDGET<-log(movie$BUDGET)
movie_new$REVENUElog<-log(movie$REVENUE)
movie_new$BUDGET[movie_new$BUDGET=="-Inf"]<-NULL
movie_new$BUDGET[movie_new$BUDGET=="-Inf"]<-'(none)'
movie_new$REVENUElog[movie_new$REVENUElog=="-Inf"]<-'(none)'
sapply(movie_new,class)
#### exclude unnecessary variables & transform extreme values
# extreme values
movie_new$BUDGET<-log(movie$BUDGET)
movie_new$REVENUElog<-log(movie$REVENUE)
#### exclude unnecessary variables & transform extreme values
# extreme values
movie_new$BUDGET<-log(movie$BUDGET+1)
movie_new$REVENUElog<-log(movie$REVENUE+1)
#### exclude unnecessary variables & transform extreme values
# extreme values
movie_new$BUDGET<-log(movie$BUDGET+1.1)
movie_new$REVENUElog<-log(movie$REVENUE+1.1)
#### exclude unnecessary variables & transform extreme values
# extreme values
movie_new$BUDGET<-log(movie$BUDGET+1)
movie_new$REVENUElog<-log(movie$REVENUE+1)
movie_new$REVENUElog[movie_new$REVENUElog=="0.00000"]<- mean(movie_new$REVENUElog)
#### exclude unnecessary variables & transform extreme values
# extreme values
movie_new$BUDGET<-movie$BUDGET
#### exclude unnecessary variables & transform extreme values
# extreme values
movie_new$BUDGET[movie_new$BUDGET==0]
movie_new$BUDGET
